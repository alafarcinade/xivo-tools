#!/usr/bin/env python
import time
import argparse

from fabric.api import run, settings
from fabric.context_managers import hide
from fabric.decorators import hosts
from fabric.tasks import execute

KVM_HOST = "root@kvm-2-dev"
XIVO_TEST_HOST = "root@xivo-test"
FARM_HOST = "root@wheezy-farm.xivo.fr"
MIRROR_HOST = "root@mirror.xivo.fr"

CONNECTION_ATTEMPTS = 20


def freeze(previous, release):
    execute(stop_xivo_test)
    execute(revert_snapshot, previous)
    execute(start_xivo_test)
    execute(build_packages)
    execute(synchronize_mirrors)
    execute(clear_confgen_cache)
    execute(upgrade_xivo_test)

    print
    print "RC is ready !"
    print


@hosts(KVM_HOST)
def stop_xivo_test():
    with hide('stdout'):
        with settings(ok_ret_codes=[0, 1]):
            run('virsh shutdown xivo-test')

    while _is_xivo_test_up():
        time.sleep(1)


def _is_xivo_test_up():
    with settings(ok_ret_codes=[0, 1]):
        with hide('running', 'stdout'):
            output = run('virsh list | grep xivo-test')
    return output.return_code == 0


@hosts(KVM_HOST)
def revert_snapshot(version):
    with hide('stdout'):
        run('virsh snapshot-revert --force xivo-test %s' % version)


@hosts(KVM_HOST)
def start_xivo_test():
    run('virsh start xivo-test')


@hosts(FARM_HOST)
def build_packages():
    run('packaging-farm --cd skaro rebuild')


@hosts(XIVO_TEST_HOST)
def clear_confgen_cache():
    with settings(connection_attempts=CONNECTION_ATTEMPTS):
        run('rm -f /var/lib/xivo-confgend/asterisk/*')


@hosts(MIRROR_HOST)
def synchronize_mirrors():
    run('./update_xivo-rc')


@hosts(XIVO_TEST_HOST)
def upgrade_xivo_test():
    run('xivo-upgrade -f')


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('previous_version', help='previous XiVO version')
    parser.add_argument('rc_version', help='Version to freeze')

    args = parser.parse_args()
    freeze(args.previous_version, args.rc_version)
