#!/bin/sh

MAC_LOCAL_XV="00:0C:29:38:0B:EF"

IFACE_DATA="eth0"
IP_VIP_DATA="192.168.51.162"
IP_LOCAL_XV_DATA="192.168.51.160"
NETMASK_DATA="255.255.255.0"

IFACE_VOIP="eth0.590"
IP_VIP_VOIP="10.59.0.10"
IP_LOCAL_XV_VOIP="10.59.0.1"
NETMASK_VOIP="255.255.255.0"

usage() {
    cat << EOF
    Script which sets the Virtual IP for each interface
    usage: $(basename $0) action
        action: start or stop to enable/disable Virtual IPs on slave
EOF
}

enable_virtual_ip() {

## Add the two lines below for each Floating IP and iface replacing :
## - IPADDR = Floating IP,
## - NETMASK = Netmask,
## - IFACE = interface name (i.e. eth0)
## - ROUTER_IP = Router IP of the network
##
# ip addr add IPADDR/NETMASK dev IFACE
# arping -S IPADDR -s ${MAC_LOCAL_XV} -c 5 -i IFACE ROUTER_IP

	# VLAN Data
	ip addr add ${IP_VIP_DATA}/${NETMASK_DATA} dev ${IFACE_DATA}
	arping -S ${IP_VIP_DATA} -s ${MAC_LOCAL_XV} -c 5 -i ${IFACE_DATA} -B

	# VLAN VoIP
	ip addr add ${IP_VIP_VOIP}/${NETMASK_VOIP} dev ${IFACE_VOIP}
	arping -S ${IP_VIP_VOIP} -s ${MAC_LOCAL_XV} -c 5 -i ${IFACE_VOIP} -B
}


disable_virtual_ip() {

## Add the two lines below for each Floating IP and iface replacing :
## - IPADDR = Floating IP,
## - NETMASK = Netmask,
## - IFACE = interface name (i.e. eth0i or eth0.3)
## - XVMASTER_IPADDR = IP xivo-master
## - ROUTER_IP = Router IP of the network
##
# ip addr del IPADDR/NETMASK dev IFACE
# arping -S XVMASTER_IPADDR -s ${MAC_LOCAL_XV} -c 5 -i IFACE ROUTER_IP

	# VLAN Data
	ip addr del ${IP_VIP_DATA}/${NETMASK_DATA} dev ${IFACE_DATA}
	arping -S ${IP_LOCAL_XV_DATA} -s ${MAC_LOCAL_XV} -c 5 -i ${IFACE_DATA} -B

	# VLAN VoIP
	ip addr del ${IP_VIP_VOIP}/${NETMASK_VOIP} dev ${IFACE_VOIP}
	arping -S ${IP_LOCAL_XV_VOIP} -s ${MAC_LOCAL_XV} -c 5 -i ${IFACE_VOIP} -B
}

case $1 in
    start) enable_virtual_ip;;
    stop)  disable_virtual_ip;;
    *) usage;;
esac

